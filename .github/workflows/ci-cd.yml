name: React Native CI/CD

on:
  push:
    branches: [main, master]
    paths-ignore:
      - "**.md"
      - "LICENSE"
      - "docs/**"
  pull_request:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      buildType:
        type: choice
        description: "Build type to run"
        options:
          - prod-apk
          - prod-aab
          - ios-prod
          - publish-stores
          - all
      platform:
        type: choice
        description: "Platform to build"
        default: "all"
        options:
          - android
          - ios
          - all

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  EXPO_APPLE_ID: ${{ secrets.EXPO_APPLE_ID }}
  EXPO_APPLE_PASSWORD: ${{ secrets.EXPO_APPLE_PASSWORD }}
  EXPO_TEAM_ID: ${{ secrets.EXPO_TEAM_ID }}
  GOOGLE_PLAY_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  NODE_OPTIONS: --openssl-legacy-provider
  EAS_PROJECT_ID: 59793018-86dd-49b7-8947-53daa966fea2

jobs:
  check-skip:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Skip CI check
        run: echo "Proceeding with workflow"

  test:
    needs: check-skip
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📦 Setup npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧹 Run ESLint
        run: npm run lint

      - name: 📢 Notify test results
        if: always() && env.SLACK_WEBHOOK != ''
        uses: rtCamp/action-slack-notify@v2
        continue-on-error: true
        env:
          SLACK_WEBHOOK: ${{ env.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
          SLACK_TITLE: PulseGuard App - Test Results
          SLACK_MESSAGE: |
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            Status: Tests ${{ job.status == 'success' && 'passed ✅' || 'failed ❌' }}
            
            View run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  build-and-deploy:
    needs: test
    if: (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')) || github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        include:
          - platform: android
            runs-on: ubuntu-latest
          - platform: ios
            runs-on: macos-latest
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: 🏗 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📦 Setup npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: 📦 Install dependencies
        run: |
          npm ci
          npm install -g eas-cli@latest

      - name: 📱 Setup EAS build cache
        uses: actions/cache@v3
        with:
          path: ~/.eas-build-local
          key: ${{ runner.os }}-eas-build-local-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-eas-build-local-

      - name: 🔄 Verify EAS CLI installation
        run: |
          echo "EAS CLI version:"
          eas --version

      - name: 📋 Fix package.json main entry
        run: |
          # Check if jq is installed, if not install it
          if ! command -v jq &> /dev/null; then
            echo "Installing jq..."
            sudo apt-get update && sudo apt-get install -y jq
          fi

          # Fix the main entry in package.json
          if [ -f ./package.json ]; then
            # Create a backup
            cp package.json package.json.bak
            # Update the package.json
            jq '.main = "node_modules/expo/AppEntry.js"' package.json > package.json.tmp && mv package.json.tmp package.json
            echo "Updated package.json main entry"
            cat package.json | grep "main"
          else
            echo "package.json not found"
            exit 1
          fi

      - name: 📋 Update metro.config.js for SVG support
        run: |
          if [ -f ./metro.config.js ]; then
            echo "Creating backup of metro.config.js"
            cp ./metro.config.js ./metro.config.js.backup
            echo "Updating metro.config.js to CommonJS format"
            cat > ./metro.config.js << 'EOFMARKER'
          /* eslint-disable @typescript-eslint/no-var-requires */
          const { getDefaultConfig } = require('expo/metro-config');

          const config = getDefaultConfig(__dirname);

          const { transformer, resolver } = config;

          config.transformer = {
            ...transformer,
            babelTransformerPath: require.resolve('react-native-svg-transformer/expo'),
          };

          config.resolver = {
            ...resolver,
            assetExts: resolver.assetExts.filter(ext => ext !== 'svg'),
            sourceExts: [...resolver.sourceExts, 'svg'],
          };

          module.exports = config;
          EOFMARKER
            echo "metro.config.js updated to CommonJS format"
          else
            echo "metro.config.js not found"
          fi


      - name: 📱 Build Production APK
        if: github.event.inputs.buildType == 'all' || github.event.inputs.buildType == 'prod-apk' || github.event_name == 'push' && (matrix.platform == 'android' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'android')
        run: |
          export NODE_OPTIONS="--openssl-legacy-provider --max_old_space_size=4096"
          eas build --platform android --profile production-apk --local --non-interactive --output=./app-prod.apk
          echo "APK_BUILT=true" >> $GITHUB_ENV
        env:
          NODE_ENV: production

      - name: 📱 Build Production AAB
        if: github.event.inputs.buildType == 'all' || github.event.inputs.buildType == 'prod-aab' || github.event_name == 'push' && (matrix.platform == 'android' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'android')
        run: |
          export NODE_OPTIONS="--openssl-legacy-provider --max_old_space_size=4096"
          eas build --platform android --profile production --local --non-interactive --output=./app-prod.aab
          echo "AAB_BUILT=true" >> $GITHUB_ENV
        env:
          NODE_ENV: production


      - name: 📱 Build iOS Production
        if: (github.event.inputs.buildType == 'all' || github.event.inputs.buildType == 'ios-prod') && (matrix.platform == 'ios' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'ios')
        run: |
          export NODE_OPTIONS="--openssl-legacy-provider --max_old_space_size=4096"
          eas build --platform ios --profile production --local --non-interactive --output=./app-ios-prod.ipa
          echo "IOS_BUILT=true" >> $GITHUB_ENV
        env:
          NODE_ENV: production

      - name: 🚀 Submit to Play Store
        if: (github.event.inputs.buildType == 'all' || github.event.inputs.buildType == 'publish-stores') && (matrix.platform == 'android' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'android') && env.AAB_BUILT == 'true'
        run: |
          if [ -f "./app-prod.aab" ]; then
            eas submit -p android --path ./app-prod.aab --non-interactive
            echo "AAB_SUBMITTED=true" >> $GITHUB_ENV
          else
            echo "AAB file not found, skipping Play Store submission"
            echo "AAB_SUBMITTED=false" >> $GITHUB_ENV
          fi
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          GOOGLE_PLAY_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}

      - name: 🍎 Submit to App Store
        if: (github.event.inputs.buildType == 'all' || github.event.inputs.buildType == 'publish-stores') && (matrix.platform == 'ios' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'ios') && env.IOS_BUILT == 'true'
        run: |
          if [ -f "./app-ios-prod.ipa" ]; then
            eas submit -p ios --path ./app-ios-prod.ipa --non-interactive
            echo "IOS_SUBMITTED=true" >> $GITHUB_ENV
          else
            echo "IPA file not found, skipping App Store submission"
            echo "IOS_SUBMITTED=false" >> $GITHUB_ENV
          fi
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          EXPO_APPLE_ID: ${{ secrets.EXPO_APPLE_ID }}
          EXPO_APPLE_PASSWORD: ${{ secrets.EXPO_APPLE_PASSWORD }}
          EXPO_TEAM_ID: ${{ secrets.EXPO_TEAM_ID }}

      - name: 📦 Upload build artifacts to GitHub
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-builds-${{ matrix.platform }}
          path: |
            ./app-prod.apk
            ./app-prod.aab
            ./app-ios-prod.ipa
          retention-days: 7
          if-no-files-found: ignore

      - name: 📢 Notify build completion
        if: always() && env.SLACK_WEBHOOK != ''
        uses: rtCamp/action-slack-notify@v2
        continue-on-error: true
        env:
          SLACK_WEBHOOK: ${{ env.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
          SLACK_TITLE: PulseGuard App - Build Results
          SLACK_MESSAGE: |
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Platform: ${{ matrix.platform }}
            Status: Build ${{ job.status == 'success' && 'completed successfully ✅' || 'failed ❌' }}
            
            APK Built: ${{ env.APK_BUILT == 'true' && 'Yes' || 'No' }}
            AAB Built: ${{ env.AAB_BUILT == 'true' && 'Yes' || 'No' }}
            iOS Built: ${{ env.IOS_BUILT == 'true' && 'Yes' || 'No' }}
            AAB Submitted: ${{ env.AAB_SUBMITTED == 'true' && 'Yes' || env.AAB_SUBMITTED == 'false' && 'No' || 'N/A' }}
            iOS Submitted: ${{ env.IOS_SUBMITTED == 'true' && 'Yes' || env.IOS_SUBMITTED == 'false' && 'No' || 'N/A' }}
            
            View run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}